name: Run Smoke Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Every day at midnight
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  contents: read
  pull-requests: write

env:
  SMOKETESTS_FOLDER_PATH: "./api/tests/OweMe.Api.SmokeTests"
  CSPROJ_NAME: "OweMe.Api.SmokeTests.csproj"
  COVER_FILE_NAME: "dotcoverReport.xml"

jobs:
  test:
    name: Run smoke tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for Nbgv versioning

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}

      - name: Install dotcover
        run: dotnet tool install --global JetBrains.dotCover.CommandLineTools

      - name: Restore dependencies
        working-directory: "${{ env.SMOKETESTS_FOLDER_PATH }}"
        run: dotnet restore "${{ env.CSPROJ_NAME }}"

      - name: Build smoke tests
        working-directory: "${{ env.SMOKETESTS_FOLDER_PATH }}"
        run: dotnet build "${{ env.CSPROJ_NAME }}" --no-restore --configuration Release

      - name: Run smoke tests with dotCover
        working-directory: "${{ env.SMOKETESTS_FOLDER_PATH }}"
        run: dotCover cover-dotnet --reportType=DetailedXML --Output="${{ env.COVER_FILE_NAME }}" -- test "${{ env.CSPROJ_NAME }}" --configuration Release --no-restore --no-build --verbosity normal
        env:
          APISETTINGS__BASEURL: ${{ secrets.SMOKETESTS_APISETTINGS_BASEURL }}
          IDENTITYPROVIDERSETTINGS__ADDRESS: ${{ secrets.SMOKETESTS_IDENTITYPROVIDERSETTINGS_ADDRESS }}
          IDENTITYPROVIDERSETTINGS__CLIENTID: ${{ secrets.SMOKETESTS_IDENTITYPROVIDERSETTINGS_CLIENTID }}
          IDENTITYPROVIDERSETTINGS__CLIENTSECRET: ${{ secrets.SMOKETESTS_IDENTITYPROVIDERSETTINGS_CLIENTSECRET }}
          USERSETTINGS__USERNAME: ${{ secrets.SMOKETESTS_USERSETTINGS_USERNAME }}
          USERSETTINGS__PASSWORD: ${{ secrets.SMOKETESTS_USERSETTINGS_PASSWORD }}

      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.4.12
        with:
          reports: '${{ env.SMOKETESTS_FOLDER_PATH }}/${{ env.COVER_FILE_NAME }}'
          targetdir: '${{ env.SMOKETESTS_FOLDER_PATH }}/coveragereport'
          reporttypes: 'HtmlInline;Cobertura;MarkdownSummaryGithub'
          assemblyfilters: '+*'
          classfilters: '+*'
          filefilters: '+*'
          riskhotspotassemblyfilters: '+*'
          riskhotspotclassfilters: '+*'
          verbosity: 'Info'
          tag: '${{ github.run_number }}_${{ github.run_id }}'
          toolpath: 'reportgeneratortool'

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport
          path: ${{ env.SMOKETESTS_FOLDER_PATH }}/coveragereport

      - name: Add comment to PR # Only applicable if 'MarkdownSummaryGithub' or one of the other Markdown report types is generated
        if: github.event_name == 'pull_request'
        run: gh pr comment $PR_NUMBER --edit-last --create-if-none --body-file ${{ env.SMOKETESTS_FOLDER_PATH }}/coveragereport/SummaryGithub.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}

      - name: Publish coverage in build summary # Only applicable if 'MarkdownSummaryGithub' or one of the other Markdown report types is generated
        run: cat ${{ env.SMOKETESTS_FOLDER_PATH }}/coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
        shell: bash